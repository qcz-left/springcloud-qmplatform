<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcz.qmplatform.system.mapper.MenuMapper">

    <select id="selectMenuTree" resultType="com.qcz.qmplatform.system.po.MenuTree">
        select
            permission_id as id,
            permission_name as name,
            icon,
            code,
            iorder,
            parent_id as "parentId",
            permission_type as "permissionType",
            link_url as "linkUrl"
        from v_sys_permission vsp
        where 1=1
        <if test="permissionName != null and permissionName != ''">
            and permission_name like #{permissionName}
        </if>
        <if test="permissionType != null and permissionType != ''">
            and permission_type = #{permissionType}
        </if>
        <if test="permissionId != null and permissionId != ''">
            and not exists(
                select permission_id from (
                    with recursive r as(
                        select * from v_sys_permission where permission_id = #{permissionId}
                        union all
                        select p.* from v_sys_permission p, r where r.permission_id = p.parent_id
                    )
                    select permission_id from r
                ) as tmp
                where tmp.permission_id = vsp.permission_id
            )
        </if>
        order by iorder
    </select>

    <select id="getPermissionById" resultType="com.qcz.qmplatform.system.po.Permission">
        select
            permission_id,
            permission_name,
            icon,
            code,
            iorder,
            parent_id,
            permission_type,
            link_url
        from
            v_sys_permission
        where
            permission_id = #{id}
    </select>

    <delete id="deleteMenuById">
        delete from sys_menu where menu_id in(
            with recursive r as(
                select menu_id, parent_id from sys_menu where menu_id in(
                    <foreach collection="menuIds" item="menuId" open="("  separator="," close=")">
                        #{menuId}
                    </foreach>
                )
                union all
                select p.menu_id, p.parent_id from sys_menu p, r where r.menu_id = p.parent_id
            )
            select menu_id from r
        )
    </delete>
</mapper>
